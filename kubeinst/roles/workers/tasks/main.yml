- name: Install Kubernetes components
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - kubelet
      - kubeadm
    state: present
    update_cache: yes

- name: Hold Kubernetes packages
  ansible.builtin.shell:
    cmd: apt-mark hold kubelet kubeadm

- name: Enable and start kubelet service
  ansible.builtin.systemd:
    name: kubelet
    enabled: yes
    state: started

- name: Disable swap
  ansible.builtin.shell:
    cmd: swapoff -a
  failed_when: false

- name: Disable swap in /etc/fstab
  ansible.builtin.shell:
    cmd: sed -i '/swap/s/^/#/' /etc/fstab

- name: Reset Kubernetes cluster with kubeadm
  ansible.builtin.command:
    cmd: kubeadm reset -f

- name: Delete UFW rules
  ufw:
    rule: deny
    port: "{{ item.port }}"
    proto: "{{ item.protocol }}"
  with_items: "{{ ufw_deny_rules }}"

- name: Set node IP for kubelet
  ansible.builtin.lineinfile:
    path: /etc/default/kubelet
    regexp: '^KUBELET_EXTRA_ARGS='
    line: 'KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}'

- name: Restart kubelet
  ansible.builtin.systemd:
    name: kubelet
    state: restarted

- name: Enable UFW
  ufw:
    state: enabled
    policy: allow

- name: Add UFW rules
  ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.protocol }}"
  with_items: "{{ ufw_allow_rules }}"

- name: Join worker node to the cluster
  ansible.builtin.shell:
    cmd: >-
         kubeadm join "{{ hostvars[groups['master'][0]]['join_ip'] }}:6443"
         --token "{{ hostvars[groups['master'][0]]['join_token'] }}"
         --discovery-token-ca-cert-hash "sha256:{{ hostvars[groups['master'][0]]['join_sha256'] }}"
